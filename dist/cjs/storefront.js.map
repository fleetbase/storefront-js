{"version":3,"file":"storefront.js","sources":["../../src/resources/network.js","../../src/storefront.js","../../src/utils/is-key-valid.js","../../src/utils/detect-adapter.js"],"sourcesContent":["import { Collection } from '@fleetbase/sdk';\nimport Resource from '../resource';\nimport PaymentGateway from './payment-gateway';\nimport Store from './store';\nimport StoreLocation from './store-location';\n\nexport default class Network extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'network', options);\n    }\n\n    getTags(params = {}) {\n        return this.adapter.get('tags', params);\n    }\n\n    async getResourceCollection(endpoint, ResourceClass, params = {}) {\n        try {\n            const resources = await this.adapter.get(endpoint, params);\n            return new Collection(resources.map((attributes) => new ResourceClass(attributes, this.adapter)));\n        } catch (error) {\n            console.error(`Error fetching ${endpoint}:`, error);\n            throw error;\n        }\n    }\n\n    async getStores(params = {}) {\n        return this.getResourceCollection('stores', Store, params);\n    }\n\n    async getStoreLocations(params = {}) {\n        return this.getResourceCollection('store-locations', StoreLocation, params);\n    }\n\n    async getPaymentGateways() {\n        return this.getResourceCollection('gateways', PaymentGateway);\n    }\n}\n","import StorefrontStore from './store';\nimport { detectAdapter, isKeyValid } from './utils';\nimport { lookup } from './resolver';\nimport { Product, Category, Customer, Cart, Store, StoreLocation, StoreHour, DeliveryServiceQuote, Checkout, PaymentGateway, Review, Network } from './resources';\nimport { cartActions } from './resources/cart';\nimport { customerActions } from './resources/customer';\nimport { checkoutActions } from './resources/checkout';\nimport { reviewActions } from './resources/review';\nimport { Collection } from '@fleetbase/sdk';\n\n/**\n * // instance\n * const storefront = new Storefront();\n *\n */\n\nexport default class Storefront {\n    /**\n     * Builds an instance of the Fleetbase Storefront SDK\n     *\n     * @param  {String} storeKey  The access key for the storefront store\n     * @param  {Object} config    The config object\n     * @param  {Boolean} debug    Enable debug mode\n     * @return {Storefront}        Instance\n     */\n    constructor(storeKey, config = {}, debug = false) {\n        this.version = config.version || 'v1';\n        this.options = {\n            version: this.version,\n            host: config.host || 'https://api.fleetbase.io',\n            namespace: `storefront/${this.version}` || config.namespace,\n            publicKey: storeKey,\n            debug,\n        };\n\n        if (!isKeyValid(storeKey)) {\n            throw new Error('⚠️ Invalid Storefront key given to Storefront SDK');\n        }\n\n        this.adapter = config.adapter || detectAdapter(this.options);\n\n        this.products = new StorefrontStore('product', this.adapter);\n        this.categories = new StorefrontStore('category', this.adapter);\n        this.reviews = new StorefrontStore('review', this.adapter).extendActions(reviewActions);\n        this.customers = new StorefrontStore('customer', this.adapter).extendActions(customerActions);\n        this.cart = new StorefrontStore('cart', this.adapter).extendActions(cartActions);\n        this.checkout = new StorefrontStore('checkout', this.adapter).extendActions(checkoutActions);\n    }\n\n    /** loads information about this storefront */\n    about() {\n        return this.adapter.get('about');\n    }\n\n    /** lookup a specific store or network provided the ID */\n    lookup(id) {\n        return this.adapter.get(`lookup/${id}`);\n    }\n\n    /** search products in store or network */\n    search(query, options = {}) {\n        return this.adapter.get('search', { query, ...options }).then((products) => {\n            return new Collection(products.map((product) => new Product(product)));\n        });\n    }\n\n    static newInstance() {\n        return new Storefront(...arguments);\n    }\n\n    setAdapter(adapter) {\n        this.adapter = adapter;\n    }\n\n    getAdapter() {\n        return this.adapter;\n    }\n}\n\nexport { Product, Category, Customer, Cart, Store, StoreLocation, StoreHour, DeliveryServiceQuote, Checkout, PaymentGateway, Review, Network, lookup };\n","const isKeyValid = (key) => {\n    return typeof key === 'string' && key.length > 30 && (key.startsWith('store_') || key.startsWith('network_'));\n};\n\nexport default isKeyValid;\n","import { lookup } from '../resolver';\nimport { isNodeEnvironment } from '@fleetbase/sdk';\n\nconst detectAdapter = (options = {}) => {\n    if (isNodeEnvironment()) {\n        return lookup('adapter', 'NodeAdapter', options);\n    }\n\n    return lookup('adapter', 'BrowserAdapter', options);\n};\n\nexport default detectAdapter;\n"],"names":["Network","_Resource","attributes","arguments","length","undefined","adapter","options","_classCallCheck","_callSuper","_inherits","_createClass","key","value","params","this","get","_getResourceCollection","_asyncToGenerator","_regeneratorRuntime","mark","_callee","endpoint","ResourceClass","resources","_this","_args","wrap","_context","prev","next","sent","abrupt","Collection","map","t0","console","error","concat","stop","_x","_x2","apply","_getStores","_callee2","_args2","_context2","getResourceCollection","Store","_getStoreLocations","_callee3","_args3","_context3","StoreLocation","_getPaymentGateways","_callee4","_context4","PaymentGateway","Resource","StorefrontResource","Storefront","storeKey","config","debug","version","host","namespace","publicKey","startsWith","Error","isNodeEnvironment","lookup","detectAdapter","products","StorefrontStore","categories","reviews","extendActions","reviewActions","customers","customerActions","cart","cartActions","checkout","checkoutActions","id","query","_objectSpread","then","product","Product","_construct","Array","prototype","slice","call"],"mappings":"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"}