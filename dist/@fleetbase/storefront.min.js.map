{"version":3,"file":"storefront.min.js","sources":["../../src/resource.js","../../src/utils/detect-adapter.js","../../src/utils/is-phone.js","../../src/utils/format-currency.js","../../src/utils/is-key-valid.js","../../src/utils/is-empty.js","../../src/resources/product.js","../../src/resources/category.js","../../src/resources/customer.js","../../src/resources/cart.js","../../node_modules/date-fns/esm/_lib/toInteger/index.js","../../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../../node_modules/date-fns/esm/toDate/index.js","../../node_modules/date-fns/esm/addMilliseconds/index.js","../../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../../node_modules/date-fns/esm/isDate/index.js","../../node_modules/date-fns/esm/isValid/index.js","../../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../../node_modules/date-fns/esm/locale/en-US/index.js","../../node_modules/date-fns/esm/subMilliseconds/index.js","../../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../../node_modules/date-fns/esm/_lib/format/formatters/index.js","../../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../../node_modules/date-fns/esm/format/index.js","../../node_modules/date-fns/esm/_lib/assign/index.js","../../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../../node_modules/date-fns/esm/parse/index.js","../../src/resources/store-hour.js","../../src/resources/store-location.js","../../src/resources/payment-gateway.js","../../src/resources/store.js","../../src/resources/network.js","../../src/resources/delivery-service-quote.js","../../src/resources/checkout.js","../../src/resolver.js","../../src/store.js","../../src/storefront.js"],"sourcesContent":["import { Resource } from '@fleetbase/sdk';\nimport StorefrontStore from './store';\n\nexport default class StorefrontResource extends Resource {\n    /**\n     * Set a new adapter to the resource instance, this will update the Store instance\n     *\n     * @param {Adapter} adapter\n     * @return {Resource} this\n     */\n    setAdapter(adapter) {\n        this.adapter = adapter;\n        this.store = new StorefrontStore(this.resource, adapter, {\n            onAfterFetch: this.syncAttributes.bind(this),\n            actions: this.options?.actions\n        });\n\n        return this;\n    }\n}","import { lookup } from '../resolver';\nimport { isNodeEnvironment } from '@fleetbase/sdk';\n\nconst detectAdapter = (options = {}) => {\n    if (isNodeEnvironment()) {\n        return lookup('adapter', 'NodeAdapter', options);\n    }\n\n    return lookup('adapter', 'BrowserAdapter', options);\n}\n\nexport default detectAdapter;","const isPhone = (phone = '') => {\n    return /^[+]?[\\s./0-9]*[(]?[0-9]{1,4}[)]?[-\\s./0-9]*$/g.test(phone);\n}\n\nexport default isPhone;","export default function formatCurrency(amount = 0, currency = 'USD', currencyDisplay = 'symbol') {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency, currencyDisplay }).format(amount);\n}","const isKeyValid = (key) => {\n    return typeof key === 'string' && key.length > 30 && (key.startsWith('store_') || key.startsWith('network_'));\n};\n\nexport default isKeyValid;","const isEmpty = (obj) => {\n    const none = obj === null || obj === undefined;\n    if (none) {\n        return none;\n    }\n\n    if (typeof obj.size === 'number') {\n        return !obj.size;\n    }\n\n    const objectType = typeof obj;\n\n    if (objectType === 'object') {\n        const { size } = obj;\n        if (typeof size === 'number') {\n            return !size;\n        }\n    }\n\n    if (typeof obj.length === 'number' && objectType !== 'function') {\n        return !obj.length;\n    }\n\n    if (objectType === 'object') {\n        const { length } = obj;\n        if (typeof length === 'number') {\n            return !length;\n        }\n    }\n\n    return false;\n};\n\nexport default isEmpty;\n","import Resource from '../resource';\nimport { formatCurrency, isEmpty } from '../utils';\n\nexport default class Product extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'product', options);\n    }\n\n    variants() {\n        return this.getAttribute('variants');\n    }\n\n    addons() {\n        return this.getAttribute('addon_categories');\n    }\n\n    get isOnSale() {\n        return this.getAttribute('is_on_sale');\n    }\n\n    get isNotOnSale() {\n        return !this.getAttribute('is_on_sale');\n    }\n\n    get formattedAmount() {\n        const { price, sale_price, currency } = this.getAttributes(['price', 'sale_price', 'currency']);\n\n        if (this.isOnSale) {\n\n            if (isEmpty(sale_price) || isEmpty(currency)) {\n                return null;\n            }\n\n            return formatCurrency(sale_price / 100, currency);\n        }\n\n        if (isEmpty(price) || isEmpty(currency)) {\n                return null;\n            }\n\n        return formatCurrency(price / 100, currency);\n    }\n}","import Resource from '../resource';\nimport Product from './product';\nimport { Collection } from '@fleetbase/sdk';\n\nconst { isArray } = Array;\n\nexport default class Category extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'category', options);\n    }\n\n    getProducts() {\n        return this.adapter.get('products', { category: this.id }).then((products) => {\n            return new Collection(products.map((attributes) => new Product(attributes, this.adapter)));\n        });\n    }\n}\n","import StorefrontStore from '../store';\nimport Resource from '../resource';\nimport { Contact, Place, Order, Collection, StoreActions } from '@fleetbase/sdk';\nimport { isPhone } from '../utils';\n\nconst customerActions = new StoreActions({\n    // const { error } = await storefront.customers.login('+1 111-1111');\n    login: function (identity, password = null, attributes = {}) {\n        // handle phone number authentication\n        if (isPhone(identity)) {\n            return this.adapter.post('customers/login-with-sms', { phone: identity });\n        }\n\n        if (!password) {\n            throw new Error('Login requires password!');\n        }\n\n        return this.adapter.post('customers/login', { identity, password, ...attributes }).then(this.afterFetch.bind(this));\n    },\n\n    verifyCode: function (identity, code, attributes = {}) {\n        return this.adapter.post('customers/verify-code', { identity, code, ...attributes }).then(this.afterFetch.bind(this));\n    },\n\n    requestCreationCode(identity, mode = 'email') {\n        return this.adapter.post('customers/request-creation-code', { identity, mode });\n    },\n\n    create(identity, code, attributes = {}) {\n        return this.adapter.post('customers', { identity, code, ...attributes }).then(this.afterFetch.bind(this));\n    },\n\n    retrieve: function (id) {\n        return this.findRecord(id);\n    },\n});\n\nexport default class Customer extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'customer', { actions: customerActions, ...options });\n    }\n\n    /**\n     * Set a new adapter to the resource instance, this will update the Store instance\n     *\n     * @param {Adapter} adapter\n     * @return {Resource} this\n     */\n    setAdapter(adapter) {\n        this.adapter = adapter;\n        this.store = new StorefrontStore(this.resource, adapter, {\n            onAfterFetch: this.syncAttributes.bind(this),\n            actions: this.options?.actions,\n        });\n\n        return this;\n    }\n\n    get token() {\n        return this.getAttribute('token');\n    }\n\n    syncDevice(token) {\n        return this.adapter\n            .setHeaders({ 'Customer-Token': this.token })\n            .post('customers/register-device', token)\n            .then(() => {\n                return this;\n            });\n    }\n\n    getSavedPlaces() {\n        return this.adapter\n            .setHeaders({ 'Customer-Token': this.token })\n            .get('customers/places')\n            .then((places) => {\n                return new Collection(places.map((attributes) => new Place(attributes, this.adapter)));\n            });\n    }\n\n    getOrderHistory(params = {}) {\n        return this.adapter\n            .setHeaders({ 'Customer-Token': this.token })\n            .get('customers/orders', params)\n            .then((orders) => {\n                return new Collection(orders.map((attributes) => new Order(attributes, this.adapter)));\n            });\n    }\n}\n\nexport { customerActions };\n","import Resource from '../resource';\nimport Product from './product';\nimport { StoreActions } from '@fleetbase/sdk';\n\nconst { isArray } = Array;\nconst cartActions = new StoreActions({\n    create: undefined,\n    findAll: undefined,\n    query: undefined,\n    queryRecord: undefined,\n\n    add: function (id, productId, quantity = 1, data = {}, options = {}) {\n        return this.adapter.post(`${this.namespace}/${id}/${productId}`, { ...data, quantity }, options).then(this.afterFetch.bind(this));\n    },\n\n    update: function (id, cartItemId, quantity, data = {}, options = {}) {\n        return this.adapter.put(`${this.namespace}/${id}/${cartItemId}`, { ...data, quantity }, options).then(this.afterFetch.bind(this));\n    },\n\n    remove: function (id, cartItemId, options = {}) {\n        return this.adapter.delete(`${this.namespace}/${id}/${cartItemId}`, {}, options).then(this.afterFetch.bind(this));\n    },\n\n    empty: function (id, options = {}) {\n        return this.adapter.put(`${this.namespace}/${id}/empty`, {}, options).then(this.afterFetch.bind(this));\n    },\n\n    retrieve: function (id = '') {\n        return this.findRecord(id);\n    },\n});\n\nexport default class Cart extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'cart', { actions: cartActions, ...options });\n    }\n\n    add(productId, quantity = 1, data = {}, options = {}) {\n        if (productId instanceof Product) {\n            productId = productId.id;\n        }\n\n        return this.store.add(this.id, productId, quantity, data, options);\n    }\n\n    update(cartItemId, quantity, data = {}, options = {}) {\n        return this.store.update(this.id, cartItemId, quantity, data, options);\n    }\n\n    remove(cartItemId, options = {}) {\n        return this.store.remove(this.id, cartItemId, options);\n    }\n\n    empty(options = {}) {\n        return this.store.empty(this.id, options);\n    }\n\n    delete() {\n        return this.destroy();\n    }\n\n    refresh() {\n        return this.store.retrieve(this.id);\n    }\n\n    subtotal() {\n        let subtotal = 0;\n\n        this.contents().forEach((cartItem) => {\n            subtotal += cartItem.subtotal;\n        });\n\n        return subtotal;\n    }\n\n    contents() {\n        return this.getAttribute('items', []);\n    }\n\n    hasProduct(productId) {\n        return this.contents().findIndex((cartItem) => cartItem.product_id === productId) !== -1;\n    }\n\n    get isEmpty() {\n        const contents = this.contents();\n\n        if (!isArray(contents)) {\n            return true;\n        }\n\n        return contents.length === 0;\n    }\n\n    get isNotEmpty() {\n        return !this.isEmpty;\n    }\n}\n\nexport { cartActions };\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {*} value - the value to check\n * @returns {boolean} true if the given value is a date\n * @throws {TypeError} 1 arguments required\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\n\nexport default function isDate(value) {\n  requiredArgs(1, arguments);\n  return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';\n}","import isDate from \"../isDate/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n\n  if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {\n    return false;\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(Number(date));\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\n\nvar formatDistance = function (token, count, options) {\n  var result;\n  var tokenValue = formatDistanceLocale[token];\n\n  if (typeof tokenValue === 'string') {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace('{{count}}', count.toString());\n  }\n\n  if (options !== null && options !== void 0 && options.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n};\n\nexport default formatDistance;","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // TODO: Remove String()\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\n\nvar formatRelative = function (token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n};\n\nexport default formatRelative;","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nvar ordinalNumber = function (dirtyNumber, _options) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n};\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return quarter - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nimport buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport setUTCDay from \"../../../_lib/setUTCDay/index.js\";\nimport setUTCISODay from \"../../../_lib/setUTCISODay/index.js\";\nimport setUTCISOWeek from \"../../../_lib/setUTCISOWeek/index.js\";\nimport setUTCWeek from \"../../../_lib/setUTCWeek/index.js\";\nimport startOfUTCISOWeek from \"../../../_lib/startOfUTCISOWeek/index.js\";\nimport startOfUTCWeek from \"../../../_lib/startOfUTCWeek/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCWeek from \"../getUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport getUTCISOWeek from \"../getUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport assign from \"../_lib/assign/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport parsers from \"./_lib/parsers/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward (toDate no longer accepts a string)\n *   toDate(1392098430000) // Unix to timestamp\n *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale\n  }; // If timezone isn't specified, it will be set to the system timezone\n\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import Resource from '../resource';\nimport { format, parse, isValid } from 'date-fns';\n\nexport default class StoreHour extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'store-hour', options);\n    }\n\n    get day() {\n        return this.getAttribute('day');\n    }\n\n    get startDateInstance() {\n        if (!this.hasAttribute('start')) {\n            return null;\n        }\n\n        const includesSeconds = this.getAttribute('start').split(':').length === 3;\n        const format = includesSeconds ? 'k:mm:ss' : 'k:mm';\n\n        return parse(this.getAttribute('start'), format, new Date());\n    }\n\n    get endDateInstance() {\n        if (!this.hasAttribute('end')) {\n            return null;\n        }\n\n        const includesSeconds = this.getAttribute('end').split(':').length === 3;\n        const format = includesSeconds ? 'k:mm:ss' : 'k:mm';\n\n        return parse(this.getAttribute('end'), format, new Date());\n    }\n\n    get humanReadableHours() {\n        if (!isValid(this.startDateInstance) || !isValid(this.endDateInstance)) {\n            return `${this.start} - ${this.end}`;\n        }\n\n        return `${format(this.startDateInstance, 'p')} - ${format(this.endDateInstance, 'p')}`;\n    }\n\n    // remove default resource methods\n    create() {\n        throw new Error('There is no create() method store location!');\n    }\n\n    // remove default resource methods\n    update() {\n        throw new Error('There is no update() method store location!');\n    }\n\n    // remove default resource methods\n    destroy() {\n        throw new Error('There is no destroy() method store location!');\n    }\n\n    // remove default resource methods\n    reload() {\n        throw new Error('There is no reload() method store location!');\n    }\n}\n","import Resource from '../resource';\nimport StoreHour from './store-hour';\nimport { Collection } from '@fleetbase/sdk';\n\nexport default class StoreLocation extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'store-location', options);\n    }\n\n    get hours() {\n        return new Collection(this.getAttribute('hours').map(attributes => new StoreHour(attributes)));\n    }\n\n    get schedule() {\n        const schedule = {};\n        const week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n        for (let i = 0; i < week.length; i++) {\n            const day = week[i]\n\n            schedule[day] = new Collection();\n        }\n\n        for (let i = 0; i < this.hours.length; i++) {\n            const hour = this.hours.objectAt(i);\n\n            schedule[hour.day].pushObject(hour);\n        }\n\n        return schedule;\n    }\n\n    // remove default resource methods\n    create() {\n        throw new Error('There is no create() method store location!');\n    }\n\n    // remove default resource methods\n    update() {\n        throw new Error('There is no update() method store location!');\n    }\n\n    // remove default resource methods\n    destroy() {\n        throw new Error('There is no destroy() method store location!');\n    }\n\n    // remove default resource methods\n    reload() {\n        throw new Error('There is no reload() method store location!');\n    }\n}","import Resource from '../resource';\n\nexport default class PaymentGateway extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'payment-gateway', options);\n    }\n\n    get type() {\n        return this.getAttribute('type');\n    }\n\n    get code() {\n        return this.getAttribute('code');\n    }\n\n    get isCashGateway() {\n        return this.type === 'cash';\n    }\n\n    get isStripeGateway() {\n        return this.type === 'stripe';\n    }\n    \n    setCheckoutToken(token) {\n        this.token = token;\n    }\n\n    getCheckoutToken() {\n        return this.token;\n    }\n\n    // remove default resource methods\n    findRecord() {\n        throw new Error('There is no findRecord() method for payment gateways!');\n    }\n\n    // remove default resource methods\n    create() {\n        throw new Error('There is no create() method for payment gateways!');\n    }\n\n    // remove default resource methods\n    update() {\n        throw new Error('There is no update() method for payment gateways!');\n    }\n\n    // remove default resource methods\n    destroy() {\n        throw new Error('There is no destroy() method for payment gateways!');\n    }\n\n    // remove default resource methods\n    reload() {\n        throw new Error('There is no reload() method for payment gateways!');\n    }\n}","import Resource from '../resource';\nimport StoreLocation from './store-location';\nimport PaymentGateway from './payment-gateway';\nimport { Collection, Place } from '@fleetbase/sdk';\n\nexport default class Store extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'store', options);\n    }\n\n    getLocations() {\n        return this.adapter.get('locations', { store: this.id }).then((storeLocations) => {\n            return new Collection(storeLocations.map(attributes => {\n                if (attributes.place) {\n                    attributes.place = new Place(attributes.place);\n                }\n                \n                return new StoreLocation(attributes, this.adapter);\n            }));\n        });\n    }\n    \n    getPaymentGateways() {\n        return this.adapter.get('gateways').then((gateways) => {\n            return new Collection(gateways.map(attributes => {\n                return new PaymentGateway(attributes, this.adapter);\n            }));\n        });\n    }\n}","import Resource from '../resource';\nimport StoreLocation from './store-location';\nimport PaymentGateway from './payment-gateway';\nimport Store from './store';\nimport { Collection, Place } from '@fleetbase/sdk';\n\nexport default class Network extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'network', options);\n    }\n\n    getStores(params = {}) {\n        return this.adapter.get('stores', params).then((stores) => {\n            return new Collection(stores.map(attributes => {\n                return new Store(attributes, this.adapter);\n            }));\n        });\n    }\n    \n    getPaymentGateways() {\n        return this.adapter.get('gateways').then((gateways) => {\n            return new Collection(gateways.map(attributes => {\n                return new PaymentGateway(attributes, this.adapter);\n            }));\n        });\n    }\n}","import StorefrontStore from '../store';\nimport Cart from './cart';\nimport StoreLocation from './store-location';\nimport { ServiceQuote, ServiceRate, Place, Collection, Adapter } from '@fleetbase/sdk';\nimport { formatCurrency, isEmpty } from '../utils';\n\nconst { isArray } = Array;\n\nexport default class DeliveryServiceQuote extends ServiceQuote {\n    constructor(attributes = {}, adapter, options = {}) {\n        if (attributes instanceof Adapter) {\n            return super({}, attributes, 'service-quote', options);\n        }\n            \n        super(attributes, adapter, 'service-quote', options);\n    }\n\n    /**\n     * Set a new adapter to the resource instance, this will update the Store instance\n     *\n     * @param {Adapter} adapter\n     * @return {Resource} this\n     */\n    setAdapter(adapter) {\n        this.adapter = adapter;\n        this.store = new StorefrontStore(this.resource, adapter, {\n            onAfterFetch: this.syncAttributes.bind(this),\n            actions: this.options?.actions,\n        });\n\n        return this;\n    }\n\n    get formattedAmount() {\n        const { amount, currency } = this.getAttributes(['amount', 'currency']);\n\n        if (isEmpty(amount) || isEmpty(currency)) {\n            return null;\n        }\n\n        return formatCurrency(amount / 100, currency);\n    }\n\n    static getFromCart(adapter, ...params) {\n        const quote = new DeliveryServiceQuote(adapter);\n\n        return quote.fromCart(...params);\n    }\n\n    fromCart(origin, destination, cart, config = 'storefront', all = false) {\n        if (origin?.id) {\n            origin = origin.id;\n        }\n\n        if (destination?.id) {\n            destination = destination.id;\n        }\n\n        if (cart?.id) {\n            cart = cart.id;\n        }\n\n        return this.adapter.get('service-quotes/from-cart', { origin, destination, cart, config, all }).then(serviceQuotes => {\n            if (isArray(serviceQuotes)) {\n                return new Collection(serviceQuotes.map(serviceQuote => new DeliveryServiceQuote(serviceQuote, this.adapter)));\n            }\n\n            return new DeliveryServiceQuote(serviceQuotes, this.adapter);\n        });\n    }\n}","import Resource from '../resource';\nimport Product from './product';\nimport { StoreActions, isResource, Order } from '@fleetbase/sdk';\n\nconst checkoutActions = new StoreActions({\n    create: undefined,\n    findAll: undefined,\n    query: undefined,\n    queryRecord: undefined,\n\n    initialize: function (customer, cart, serviceQuote, gateway, orderOptions = {}, options = {}) {\n        if (isResource(customer)) {\n            customer = customer.id;\n        }\n\n        if (isResource(cart)) {\n            cart = cart.id;\n        }\n\n        if (isResource(serviceQuote)) {\n            serviceQuote = serviceQuote.id;\n        }\n\n        if (isResource(gateway)) {\n            gateway = gateway.getAttribute('code');\n        }\n        \n        return this.adapter.get(`${this.namespace}/before`, { ...orderOptions, customer, cart, serviceQuote, gateway}, options);\n    },\n\n    captureOrder: function (token, transactionDetails = {}, options = {}) {\n        return this.adapter.get(`${this.namespace}/capture`, { token, transactionDetails }, options).then(orderJson => new Order(orderJson));\n    }\n});\n\nexport default class Checkout extends Resource {\n    constructor(attributes = {}, adapter, options = {}) {\n        super(attributes, adapter, 'checkout', options);\n    }\n\n    initialize() {\n        return this.store.initialize(...arguments);\n    }\n\n    captureOrder() {\n        return this.store.captureOrder(...arguments);\n    }\n}\n\nexport { checkoutActions };\n","import { Product, Category, Customer, Cart, DeliveryServiceQuote, Store, StoreLocation, StoreHour, Checkout } from './resources';\nimport { BrowserAdapter, NodeAdapter, pluralize, singularize } from '@fleetbase/sdk';\n\nconst resources = {\n    Product, Category, Customer, Cart, DeliveryServiceQuote, Store, StoreLocation, StoreHour, Checkout\n};\n\nconst adapters = {\n    BrowserAdapter,\n    NodeAdapter\n};\n\nclass Resolver {\n    constructor () {\n        this.resources = resources;\n        this.adapters = adapters;\n\n        return this.lookup(...arguments);\n    }\n\n    lookup(type, className) {\n        const key = pluralize(type);\n        const params = [ ...arguments ].slice(2);\n\n        if (!this[key]) {\n            throw new Error('Attempted to resolve invalid type');\n        }\n\n        if (!this[key][className]) {\n            throw new Error(`No ${singularize(type)} named ${className} to resolve`);\n        }\n\n        return new this[key][className](...params);\n    }\n}\n\nconst lookup = function() {\n    return new Resolver(...arguments);\n};\n\nexport {\n    Resolver,\n    lookup\n};\n","import { Store, classify, extendStoreActions } from '@fleetbase/sdk';\nimport { lookup } from './resolver';\n\nexport default class StorefrontStore extends Store {\n    constructor() {\n        super(...arguments);\n    }\n\n    extendActions(actions = []) {\n        return extendStoreActions(this, actions);\n    }\n\n    serialize(json) {\n        return lookup('resource', classify(this.resource), json, this.adapter);\n    }\n}","import StorefrontStore from './store';\nimport { detectAdapter, isKeyValid } from './utils';\nimport { Product, Category, Customer, Cart, Store, StoreLocation, StoreHour, DeliveryServiceQuote, Checkout, PaymentGateway, Network } from './resources';\nimport { cartActions } from './resources/cart';\nimport { customerActions } from './resources/customer';\nimport { checkoutActions } from './resources/checkout';\nimport { Collection } from '@fleetbase/sdk';\n\n/**\n * // instance\n * const storefront = new Storefront();\n *\n */\n\nexport default class Storefront {\n    /**\n\t * Builds an instance of the Fleetbase Storefront SDK\n\t *\n\t * @param  {String} storeKey  The access key for the storefront store\n\t * @param  {Object} config    The config object\n\t * @param  {Boolean} debug    Enable debug mode\n\t * @return {Storefront}        Instance\n\t */\n    constructor(storeKey, config = {}, debug = false) {\n        this.version = config.version || 'v1';\n        this.options = {\n            version: this.version,\n            host: config.host || 'https://api.fleetbase.io',\n            namespace: `storefront/${this.version}` || config.namespace,\n            publicKey: storeKey,\n            debug\n        };\n\n        if (!isKeyValid(storeKey)) {\n            throw new Error('⚠️ Invalid Storefront key given to Storefront SDK');\n        }\n\n        this.adapter = config.adapter || detectAdapter(this.options);\n\n        this.products = new StorefrontStore('product', this.adapter);\n        this.categories = new StorefrontStore('category', this.adapter);\n        this.customers = new StorefrontStore('customer', this.adapter).extendActions(customerActions);\n        this.cart = new StorefrontStore('cart', this.adapter).extendActions(cartActions);\n        this.checkout = new StorefrontStore('checkout', this.adapter).extendActions(checkoutActions);\n    }\n\n    /** loads information about this storefront */\n    about() {\n        return this.adapter.get('about');\n    }\n\n    /** search products in store or network */\n    search(query, options = {}) {\n        return this.adapter.get('search', { query, ...options }).then(products => {\n            return new Collection(products.map(product => new Product(product)));\n        });\n    }\n\n    static newInstance() {\n        return new Storefront(...arguments);\n    }\n\n    setAdapter(adapter) {\n        this.adapter = adapter;\n    }\n\n    getAdapter() {\n        return this.adapter;\n    }\n}\n\nexport { Product, Category, Customer, Cart, Store, StoreLocation, StoreHour, DeliveryServiceQuote, Checkout, PaymentGateway, Network };\n"],"names":["StorefrontResource","adapter","store","StorefrontStore","this","resource","onAfterFetch","syncAttributes","bind","actions","options","_this$options","Resource","detectAdapter","isNodeEnvironment","lookup","isPhone","phone","test","formatCurrency","amount","currency","currencyDisplay","Intl","NumberFormat","style","format","isKeyValid","key","length","startsWith","isEmpty","obj","none","size","objectType","Product","attributes","getAttribute","getAttributes","price","sale_price","isOnSale","Category","get","category","id","then","products","Collection","map","_this","customerActions","StoreActions","login","identity","password","post","Error","afterFetch","verifyCode","code","requestCreationCode","mode","create","retrieve","findRecord","Customer","token","setHeaders","places","Place","_this2","params","orders","Order","_this3","isArray","Array","cartActions","undefined","findAll","query","queryRecord","add","productId","quantity","data","namespace","update","cartItemId","put","remove","empty","Cart","destroy","subtotal","contents","forEach","cartItem","findIndex","product_id","toInteger","dirtyNumber","NaN","number","Number","isNaN","Math","ceil","floor","requiredArgs","required","args","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","stack","addMilliseconds","dirtyDate","dirtyAmount","timestamp","getTimezoneOffsetInMilliseconds","date","utcDate","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","isDate","value","isValid","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","count","result","tokenValue","replace","addSuffix","comparison","buildFormatLongFn","width","String","defaultWidth","formats","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_date","_baseDate","_options","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","ordinalNumber","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","pattern","findKey","valueCallback","rest","slice","object","predicate","hasOwnProperty","array","parsePattern","parseInt","parseResult","any","index","formatDistance","formatLong","formatRelative","localize","weekStartsOn","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","sign","output","abs","y","signedYear","getUTCFullYear","year","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","MILLISECONDS_IN_WEEK","getUTCISOWeek","round","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","getUTCWeek","dayPeriodEnum","formatters","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","toLowerCase","b","hours","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","x","O","formatTimezoneShort","z","t","originalDate","T","offset","dirtyDelimiter","absOffset","minutes","delimiter","dateLongFormatter","timeLongFormatter","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","input","concat","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","defaultLocale","formatterOptions","substring","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","assign","target","dirtyObject","property","setUTCDay","dirtyDay","currentDay","remainder","dayIndex","numericPatterns","timezonePatterns","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","priority","parse","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","setUTCWeek","dirtyISOWeek","setUTCISOWeek","subPriority","isLeapYear","wholeWeekDays","setUTCISODay","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","notWhitespaceRegExp","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","formatString","subFnOptions","setters","dateToSystemTimezone","tokens","usedTokens","parser","incompatibleToken","_i","usedToken","fullToken","push","uniquePrioritySetters","setter","sort","filter","setterArray","convertedDate","setFullYear","setHours","StoreHour","hasAttribute","split","startDateInstance","endDateInstance","start","end","StoreLocation","schedule","hour","objectAt","pushObject","PaymentGateway","type","Store","storeLocations","place","gateways","Network","stores","DeliveryServiceQuote","Adapter","origin","destination","cart","config","all","_origin","_destination","_cart","serviceQuotes","serviceQuote","quote","fromCart","ServiceQuote","checkoutActions","initialize","customer","gateway","orderOptions","isResource","captureOrder","transactionDetails","orderJson","Checkout","resources","adapters","BrowserAdapter","NodeAdapter","Resolver","className","pluralize","singularize","extendStoreActions","json","classify","Storefront","storeKey","debug","version","host","publicKey","categories","customers","extendActions","checkout","product"],"mappings":"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"}